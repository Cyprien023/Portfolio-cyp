name: CI Pipeline

on:
  push:
    branches:
      - main  # Lancer la CI à chaque fois qu'il y a un push sur la branche principale
  pull_request:
    branches:
      - main  # Lancer la CI lors de la création d'une pull request

jobs:
  # Job de tests
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Run tests with Vitest
        run: npm test

  # Job d'analyse statique du code
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Run lint check
        run: npm run lint # Assurez-vous que votre projet a un script lint configuré

  # Job de sécurité : Scan des dépendances avec Dependabot
  security:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Run security scan
        run: npm audit # ou utilisez un autre outil de sécurité comme Snyk, etc.

  # Job de build Docker (si tu utilises Docker)
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Docker image
        run: |
          docker build -t mon-portfolio .

      - name: Run security scan on Docker image
        run: |
          docker scan mon-portfolio

  # Job de notification
  notify:
    runs-on: ubuntu-latest
    needs: [test, lint, security]  # Ce job ne s'exécute que si les jobs précédents réussissent
    steps:
      - name: Send success notification
        if: success()
        run: echo "Tests and checks passed successfully!" # Ajoutez une notification par email ou sur Slack

      - name: Send failure notification
        if: failure()
        run: echo "One or more tests failed!" # Ajouter des notifications d'échec si nécessaire
